import string

Z26 = string.ascii_lowercase

def remove_all(li, val):
   return [value for value in li if value != val]


def z26_decode(encoded):
    ret = ""
    for i in encoded:
        ret += Z26[i]
    return ret


def z26_encode(to_encode):
    ret = []
    for i in to_encode.lower():
        ret.append(Z26.index(i))
    return ret


def dec_encode(to_encode, dec):
    if isinstance(to_encode, (tuple, list)) :
        ret = ""
        for i in to_encode:
            adec = Z26[(i+dec) % len(Z26)]
            ret += adec
    else:
            formatted = z26_encode(to_encode)
            ret = dec_encode(formatted, dec)
    return ret


def dec_decode(encoded, deca):
    dec = ""
    for i in encoded:
        dec += Z26[Z26.index(i.lower()) - int(deca)]
    return dec


def e4314(nonf):
    to_app = ""
    all_encode = []
    for i in nonf:
        if i != " ":
            to_app += i
        else:
            all_encode.append(to_app)
            to_app = ""
            
    all_encode.append(to_app)
    all_encode = [[all_encode[i], all_encode[i+1]] for i in range(0, len(all_encode), 2)]
    
    encoded = []
    #print(encoded)
    for item in all_encode:
        #print(item)
        encoded.append(dec_encode(item[0], int(item[1])))
    
    return encoded


def e4315(nonf):
    decoded = []
    text, keys = [], []
    nonf = nonf.replace("chiffre ́aveclede ́calage", "")
    nonf = nonf.replace("  ", " ")
    to_app = ""
    all_encode = []
    for i in nonf:
        if i != " ":
            to_app += i
        else:
            all_encode.append(to_app)
            to_app = ""
            
    all_encode.append(to_app)
    
    for i in all_encode:
        if i.isdigit():
            keys.append(i)
        else:
            text.append(i)
    
    for i in range(len(text)):
        #print(text[i], keys[i])
        decoded.append(dec_decode(text[i], keys[i]))
    
    return decoded
    
if __name__ == "__main__":
    nonf1 = "LAFOLLAANONIMACHERENDEANONIMIQUASIINVISIBILICOSICOSA 2 MAITRECORBEAUSURUNARBREPERCHETENAITENSONBECUNFROMAGE 15 ISURVIVEDANOTHERMEETINGTHATSHOUDHAVEBEENANEMAIL 7 IFYOUDONTKNOWTHATYOUDONTKNOWYOUTHINKYOUKNOW 5 QUOUSQUETANDEMABUTERECATILINAPATIENTIANOSTRA 14 UNCHAMPDEBLEPRENAITRACINESOUSLACOIFFEDEBECASSINE 2 VOMKLEINENMAULWURFDERWISSENWOLLTEWER 13 QUOILAMICECROCESTALAMODEPOURPRENDRESONCHAPEAU 8 TOBEORNOTTOBETHATISTHEQUESTIONWHETHERTISNOBLERINTHEMIND 3 ONVAALLERALHOTELSANSPAYERONVASINSCRIREALAFACSANSYALLER 21"
    # input("E4.3.14: TEXT TO BE FORMATTED\n")
    for e1 in e4314(nonf1):
        print(e1)
    print("============================================================")
    nonf2 = "SGOZXKIUXHKGAYAXATGXHXKVKXINKZKTGOZK chiffre ́aveclede ́calage 6 VKPYVVKKXYXSWKMROBOXNOKXYXSWSAEKCSSX chiffre ́aveclede ́calage 10 QNGWCLWVBSVWEBPIBGWCLWVBSVWEGWCBPQVS chiffre ́aveclede ́calage 8 BLNKOBOXWTGHMAXKFXXMBGZMATMLAHNWATOX chiffre ́aveclede ́calage 19 YCWQTIUQKMKZWKMABITIUWLMXWCZXZMVLZMA chiffre ́aveclede ́calage 8 JNHNLJNXMTGWXFTUNMXKXVTMBEBGTITMBXGM chiffre ́aveclede ́calage 19 SNADNQMNSSNADSGZSHRSGDPTDRSHNMVGDSGD chiffre ́aveclede ́calage 25 ATINGSVJKHRKVXKTGOZXGIOTKYUAYRGIUOLL chiffre ́aveclede ́calage 6 DCKPPAATGPAWDITAHPCHEPNTGDCKPHXCHRGX chiffre ́aveclede ́calage 15 NGECDWAFWFESMDOMJXVWJOAKKWFOGDDLWOWJ chiffre ́aveclede ́calage 18"
    # input("E4.3.15: TEXT TO BE FORMATTED\n")
    for e2 in e4315(nonf2):
        print(e2)
    
