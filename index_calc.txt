

Z26 = string.ascii_lowercase


class Mod:
    def __init__(self):
        self.n = int(input("Num: "))
        
    def e441(self, show = True):
        n = self.n    
        tab = [[] for _ in range(n)]

        for cy in range(n):
            tab[cy].append((2*cy+3)%5)
                
        if not show:
            return tab
        for n, i in enumerate(tab):
            print(f"{n}, {i}")
    
    
    def e442(self, show = True):
        n = self.n    
        tab = [[] for _ in range(n)]

        for cy in range(n):
            tab[cy].append((2*cy+3)%4)
                
        if not show:
            return tab
        for n, i in enumerate(tab):
            print(f"{n}, {i}")


def mod_inverse(a, mod=26):
    for x in range(1, mod):
        if (a * x) % mod == 1:
            return x
    return 

def z26_encode(to_encode):
    ret = []
    for i in to_encode.lower():
        ret.append(Z26.index(i))
    return ret

def enc_affine(to_encode, a,b, mod=26):
    '''
    w=(a*z+b)mod26 | a^-1
    a^-1*w=(a^-1*a*z+a^-1*b)mod26
                        ^
                        | a^-1*a=1
    z = (a^-1*w - a^-1*b)mod26
    '''

    ret = ""
    for i in to_encode.lower():
        adec = a*Z26.index(i) + b
        ret += Z26[adec % mod]
    return ret

def dec_affine(to_encode, a,b, mod=26):
    ret = ""
    for i in to_encode.lower():
        adec = mod_inverse(a)*Z26.index(i) - mod_inverse(a)*b
        ret += Z26[adec % mod]
    return ret
        
if __name__ == "__main__":
    e = enc_affine("JAMAISPERSONNENAVAITETEAUSSITROPFORT", 5,3)
    d = dec_affine("wdldrpaxkpvqqxqdedruxuxdzpprukvacvku", 5,3)
    print(e, d
